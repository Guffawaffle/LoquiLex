name: Preexec Guard

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  grep-preexec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grep for preexec_fn
        shell: bash
        run: |
          set -euo pipefail

          # Search all tracked Python files (recursive), exclude common vendor/virtualenv dirs.
          # NOTE: Use [[:space:]]* for POSIX ERE; \s requires -P (PCRE).
          if git grep -n -E 'preexec_fn[[:space:]]*=' -- \
              ':(glob)**/*.py' \
              ':(exclude,glob)**/.venv/**' \
              ':(exclude,glob)**/venv/**' \
              ':(exclude,glob)**/node_modules/**' \
              ':(exclude,glob)**/vendor/**' \
              ':(exclude,glob)**/.git/**' | tee /tmp/preexec_matches; then

            echo "::group::preexec_fn occurrences"
            # Annotate each hit so it shows inline in PR checks
            while IFS=: read -r file line rest; do
              # Guard empty reads (e.g., trailing newline)
              [[ -n "${file:-}" && -n "${line:-}" ]] || continue
              echo "::error file=${file},line=${line}::preexec_fn usage is disallowed in this repository"
            done < /tmp/preexec_matches
            echo "::endgroup::"
            exit 1
          else
            echo "No preexec_fn found in tracked Python sources"
          fi
