name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-env:
    runs-on: ubuntu-latest
    outputs:
      python-version: 3.12.3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12.3" }
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-python-3.12.3-${{ hashFiles('requirements-ci.txt', 'requirements-dev.txt', 'constraints.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-python-3.12.3-
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements-ci.txt -r requirements-dev.txt -c constraints.txt
      - name: Show key versions
        run: |
          python - <<'PY'
          import httpx, starlette, fastapi
          print("versions:", "httpx", httpx.__version__, "starlette", starlette.__version__, "fastapi", fastapi.__version__)
          PY

  quality:
    runs-on: ubuntu-latest
    needs: build-env
    env:
      HF_HUB_OFFLINE: 1
      TRANSFORMERS_OFFLINE: 1
      HF_HUB_DISABLE_TELEMETRY: 1
      LOQUILEX_OFFLINE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12.3" }
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-python-3.12.3-${{ hashFiles('requirements-ci.txt', 'requirements-dev.txt', 'constraints.txt') }}
      - name: Install (already cached)
        run: |
          python -m pip install -U pip
          pip install -r requirements-ci.txt -r requirements-dev.txt -c constraints.txt
      - name: Lint
        run: make lint
      - name: Format check
        run: make fmt
      - name: Typecheck (non-blocking)
        run: make typecheck

  unit:
    runs-on: ubuntu-latest
    needs: quality
    env:
      HF_HUB_OFFLINE: 1
      TRANSFORMERS_OFFLINE: 1
      HF_HUB_DISABLE_TELEMETRY: 1
      LOQUILEX_OFFLINE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12.3" }
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-python-3.12.3-${{ hashFiles('requirements-ci.txt', 'requirements-dev.txt', 'constraints.txt') }}
      - name: Install (cached)
        run: |
          python -m pip install -U pip
          pip install -r requirements-ci.txt -r requirements-dev.txt -c constraints.txt
      - name: Unit tests
        run: make unit || (pytest --lf -vv -rA || true)

  e2e:
    runs-on: ubuntu-latest
    needs: unit
    env:
      HF_HUB_OFFLINE: 1
      TRANSFORMERS_OFFLINE: 1
      HF_HUB_DISABLE_TELEMETRY: 1
      LOQUILEX_OFFLINE: 1
      PYTEST_ADDOPTS: "--timeout=45"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12.3" }
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-python-3.12.3-${{ hashFiles('requirements-ci.txt', 'requirements-dev.txt', 'constraints.txt') }}
      - name: Install (cached)
        run: |
          python -m pip install -U pip
          pip install -r requirements-ci.txt -r requirements-dev.txt -c constraints.txt
      - name: E2E tests
        run: |
          mkdir -p reports
          make e2e -- PYTEST_ADDOPTS="${PYTEST_ADDOPTS}" || (pytest --lf -vv -rP -s || true)
      - name: Upload e2e artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: |
            reports
            .pytest_cache
